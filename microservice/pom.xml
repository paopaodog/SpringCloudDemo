<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lzf.springcloud</groupId>
    <artifactId>microservice</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>microservice-api</module>
        <module>microservice-eureka-7001</module>
        <module>microservice-eureka-7002</module>
        <module>microservice-eureka-7003</module>
        <module>microservice-provider-dept-8001</module>
        <module>microservice-provider-dept-8002</module>
        <module>microservice-provider-dept-8003</module>
        <module>microservice-provider-dept-hystrix-8001</module>
        <module>microservice-consumer-dept-80</module>
        <module>microservice-consumer-dept-feign-80</module>
        <module>microservice-consumer-hystrix-dashboard</module>
        <module>microservice-zuul-gateway-9527</module>
        <module>microservice-config-3344</module>
        <module>microservice-config-eureka-client-7001</module>
        <module>microservice-config-dept-client-8001</module>
        <module>microservice-client-3355</module>
    </modules>
    <packaging>pom</packaging>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <lombok.version>1.16.18</lombok.version>
        <mysql.version>6.0.6</mysql.version>
        <druid.version>1.1.9</druid.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.9.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.0</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.3</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>microservice</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--resource的filtering属性用来表示资源文件中的占位符是否需要被替换，true为需要替换。-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!--
                        在我本地使用以下配置, 前后使用$作为分割符的时候,
                        yml文件中 $key$ 无法替换成对应的值
                        注释掉这段配置, 直接使用 ${key} 这种写法就可以
                    -->
                    <!--<delimiters>-->
                        <!--<delimit>$</delimit>-->
                    <!--</delimiters>-->
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>

